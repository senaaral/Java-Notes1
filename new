19.02.2023

package csd; 
class App {
	public static void main(String [] args)
	{
		Sample s, k; //referans bildirimi sample türünden bildirdigime göre s ve knin türü sample
				// s ve k stack'te oluşturulur.
		s = new Sample(); // s'nin türü sample
		k = new Sample(); // nesne oluşturur
		
		s.x = 20; //s.x'in türü int.s referansının gösterdigi nesnenin
		s.y = true; //türü boolean
		k.x = 20; // türü int
		k.y = false; //türü boolean
		
		System.out.printf("s.x = %d%n", s.x);
		System.out.printf("s.y = %b%n", s.y);
		System.out.printf("k.x = %d%n", k.x);
		System.out.printf("k.y = %b%n", k.y);

	}
}

class Sample {
	public int x; // x ve y nesnedir.heapte oluşturulur. 
	public boolean y; //bunlar non-static veri elemanlarıdır.
	}

//her sınıf bildirimi bir tür bildirimi.
//sınıf türünden bir değişkene referans diyoruz
//s ve k referans new ile nesne oluşturduk.
// referansın içinde adres var
//neye göre static veya  non-static: kurallar belirleyecek
/*-------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------*/
// sınıf oldugu için new ile nesne oluşturulabilir.
stack                          heap  //ramda organize edilir.
-----                      ---------
s				x
k				y

s x ve y adresini gösterir. örnegin csd binasının old adres. k için de aynı durum geçerli

20. satıra geldgiimizde s.x : csd binasının 3. katına çık ve onun içinde bulunan x elemanına 10 değerini ata.
1. eşlesmede s.x ve s.y iiçin 10 ve true değerleri alınır.
2. eşlesmede k.x ve k.y için ise 20 ve false değerleri alınır.
. nokta operatörünün işlevi erişimdir. 
